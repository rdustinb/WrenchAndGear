version: "3"

services:
  #####################################################################
  # This container blocks all the ads of the internets.
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    network_mode: host
    environment:
      TZ: 'America/Denver'
      WEBPASSWORD: 'CHANGEME'
    volumes:
      - '~/etc-pihole:/etc/pihole'
      - '~/etc-dnsmasq.d:/etc/dnsmasq.d'
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
  #####################################################################
  # This container runs Homebridge so I can use 'unofficial' devices with Apple's Home app.
  homebridge:
    container_name: homebridge
    image: oznu/homebridge:latest
    restart: always
    network_mode: host
    environment:
      TZ: 'America/Denver'
    volumes:
      - '~/homebridge:/homebridge'
    logging:
      driver: json-file
      options:
        max-size: '10mb'
        max-file: '5'
  #####################################################################
  # This container is used to spinup a light-weight RTSP server to allow the RPi Camera Module
  # to be streamed to another network device. The intent is to use this with Homebridge.
  mediamtx:
    container_name: rtsp_camera
    image: bluenviron/mediamtx:latest-rpi
    privileged: true
    network_mode: host
    # All of the different configuration options contained here:
    #   https://github.com/bluenviron/mediamtx/blob/main/mediamtx.yml
    # That are under paths: all: and start with rpiCameraXXX can be
    # configured in the Compose Environment whose variable names start
    # with MTX_PATHS_CAM_yyy. Therefore the variable rpiCameraWidth
    # variable in the mediamtx.yml configuration would be
    # MTX_PATHS_CAM_RPICAMERAWIDTH in this Docker Compose file.
    environment:
      MTX_PATHS_CAM_SOURCE: rpiCamera
      MTX_PATHS_CAM_RPICAMERAWIDTH: 800
      MTX_PATHS_CAM_RPICAMERAHEIGHT: 680
      MTX_PATHS_CAM_RPICAMERAAFMODE: continuous # auto, manual, continuous; Only continuous seems to work as intended
    tmpfs:
      - '/dev/shm:exec'
    volumes:
      - '/run/udev:/run/udev:ro'
